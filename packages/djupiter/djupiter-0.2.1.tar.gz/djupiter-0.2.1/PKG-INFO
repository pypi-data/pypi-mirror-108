Metadata-Version: 1.2
Name: djupiter
Version: 0.2.1
Summary: Production-ready REST endpoints for common authentication flows.
Home-page: https://djupiter.readthedocs.io/en/latest/
Author: John Alcher M. Doloiras
Author-email: alcher@directworksmedia.com
License: BSD-3-Clause
Description: ========
        Djupiter
        ========
        
        Djupter is a Django app that provides production-ready REST endpoints for common authentication flows.
        
        Get the package: ``pip install djupiter``
        
        Documentation: https://djupiter.readthedocs.io/en/latest/
        
        Note
        ----
        
        This package is still in early development, breaking changes might occur regularly.
        
        Quick start
        -----------
        
        1. Add "djupiter" and "drf_yasg" to your INSTALLED_APPS setting like this::
        
            INSTALLED_APPS = [
                ...
                "drf_yasg",
                "rest_framework.authtoken",
                "djupiter",
            ]
        
        2. Fill out the following fields on your settings file::
            
            # Used for the auto-generated API docs
            PROJECT_NAME = "My Project"
            PROJECT_DEVELOPER_EMAIL = "developer@example.com"
            PROJECT_API_VERSION = "0.0.1"
        
            # Used for sending emails.
            EMAIL_FROM = "no-reply@example.com"
            ## For production:
            # EMAIL_HOST = os.environ.get("EMAIL_HOST")
            # EMAIL_USE_TLS = int(os.environ.get("EMAIL_USE_TLS", default=0))
            # EMAIL_PORT = os.environ.get("EMAIL_PORT")
            # EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER")
            # EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD")
        
            ## For testing:
            EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
        
            # Use the custom Djupiter User model
            AUTH_USER_MODEL = 'djupiter.User'
        
        3. Include the djupiter URLconf in your project urls.py like this::
        
            path('api/', include('djupiter.urls')),
        
        4. Run ``python manage.py migrate`` to create the djupiter models.
        
        5. Visit ``http://127.0.0.1:8000/api/docs`` for the API documentation. Happy hacking!
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Requires-Python: >=3.8
