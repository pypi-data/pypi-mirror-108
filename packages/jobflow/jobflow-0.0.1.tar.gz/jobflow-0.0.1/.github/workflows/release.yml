name: release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

          pip install -r requirements.txt
          pip install .[fireworks]
          pip install .[vis]
          pip install .[dev]

      - name: Lint
        run: pre-commit run --all-files

  test:
    services:
      local_mongodb:
        image: mongo:4.0
        ports:
          - 27017:27017

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]

    steps:
      - uses: actions/checkout@v2.3.4

      - uses: actions/setup-python@v2.2.2
        with:
          python-version:  ${{ matrix.python-version }}

      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip

          pip install -r requirements.txt
          pip install .[tests]
          pip install .[fireworks]
          pip install .[vis]

      - name: Test
        run: pytest --cov=jobflow --cov-report=xml

      - uses: codecov/codecov-action@v1
        if: matrix.python-version == 3.8 && github.repository == 'hackingmaterials/jobflow'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

  docs:
    needs:
      - lint
      - test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install pandoc
        run: sudo apt-get install pandoc

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .[docs]
          pip install -e .[fireworks]

      - name: Build
        run: sphinx-build docs/src docs_build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./docs_build

  release:

    needs:
      - lint
      - test
      - docs

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Build packages
        run: |
          pip install setuptools setuptools_scm wheel
          python setup.py sdist bdist_wheel

      - name: Publish
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}

      - name: Write release info
        run: |
          awk 'BEGIN {p = 0} {a = 0 }; /^v\d*.\d*.\d*./ { p += 1; a = 1}; p + a == 1 { print } ' docs/src/changelog.rst | sed -e '1,1d' | sed  -e '/./,$!d' -e :a -e '/^\n*$/{$d;N;ba' -e '}' > release_info.txt

      - name: Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body_path: release_info.txt
          draft: false
          prerelease: false
