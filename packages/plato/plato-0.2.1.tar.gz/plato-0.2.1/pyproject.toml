[tool.poetry]
authors = ["Jan Gosmann <jan@hyper-world.de>"]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Testing",
  "Typing :: Typed",
]
description = "A dataclasses-inspired approach to test data."
documentation = "https://py-plato.github.io/plato/docs/en/stable/"
keywords = ["testdata", "dataclasses"]
license = "MIT"
maintainers = ["Jan Gosmann <jan@hyper-world.de>"]
name = "plato"
readme = "README.rst"
repository = "https://github.com/py-plato/plato"
version = "0.2.1"

[tool.poetry.dependencies]
Faker = "^8.1.3"
python = "^3.7"
typing-extensions = "^3.7.4"

[tool.poetry.dev-dependencies]
Sphinx = "^3.5.3"
black = "^20.8b1"
commitizen = "^2.17.0"
darglint = "^1.7.0"
isort = "^5.8.0"
mypy = "^0.800"
pylint = "^2.7.2"
pytest = "^6.2.2"
pytest-cov = "^2.11.1"
sphinx-rtd-theme = "^0.5.1"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 88
multi_line_output = 3
use_parentheses = true

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version = "0.2.1"
version_files = [
  "plato/__version__.py",
  "pyproject.toml:version",
]
