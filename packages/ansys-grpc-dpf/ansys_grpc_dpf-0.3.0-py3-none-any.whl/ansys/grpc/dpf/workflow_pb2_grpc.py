# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ansys.grpc.dpf.base_pb2 as base__pb2
import ansys.grpc.dpf.workflow_pb2 as workflow__pb2


class WorkflowServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/ansys.api.dpf.workflow.v0.WorkflowService/Create',
                request_serializer=base__pb2.Empty.SerializeToString,
                response_deserializer=workflow__pb2.Workflow.FromString,
                )
        self.GetFromInternalRegistry = channel.unary_unary(
                '/ansys.api.dpf.workflow.v0.WorkflowService/GetFromInternalRegistry',
                request_serializer=workflow__pb2.WorkflowFromInternalRegistryRequest.SerializeToString,
                response_deserializer=workflow__pb2.Workflow.FromString,
                )
        self.UpdateConnection = channel.unary_unary(
                '/ansys.api.dpf.workflow.v0.WorkflowService/UpdateConnection',
                request_serializer=workflow__pb2.UpdateConnectionRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.UpdatePinNames = channel.unary_unary(
                '/ansys.api.dpf.workflow.v0.WorkflowService/UpdatePinNames',
                request_serializer=workflow__pb2.UpdatePinNamesRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.AddOperators = channel.unary_unary(
                '/ansys.api.dpf.workflow.v0.WorkflowService/AddOperators',
                request_serializer=workflow__pb2.AddOperatorsRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.Get = channel.unary_unary(
                '/ansys.api.dpf.workflow.v0.WorkflowService/Get',
                request_serializer=workflow__pb2.WorkflowEvaluationRequest.SerializeToString,
                response_deserializer=workflow__pb2.WorkflowResponse.FromString,
                )
        self.RecordInInternalRegistry = channel.unary_unary(
                '/ansys.api.dpf.workflow.v0.WorkflowService/RecordInInternalRegistry',
                request_serializer=workflow__pb2.RecordInInternalRegistryRequest.SerializeToString,
                response_deserializer=workflow__pb2.RecordInInternalRegistryResponse.FromString,
                )
        self.List = channel.unary_unary(
                '/ansys.api.dpf.workflow.v0.WorkflowService/List',
                request_serializer=workflow__pb2.Workflow.SerializeToString,
                response_deserializer=workflow__pb2.ListResponse.FromString,
                )
        self.Chain = channel.unary_unary(
                '/ansys.api.dpf.workflow.v0.WorkflowService/Chain',
                request_serializer=workflow__pb2.ChainRequest.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )
        self.Delete = channel.unary_unary(
                '/ansys.api.dpf.workflow.v0.WorkflowService/Delete',
                request_serializer=workflow__pb2.Workflow.SerializeToString,
                response_deserializer=base__pb2.Empty.FromString,
                )


class WorkflowServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFromInternalRegistry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePinNames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddOperators(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordInInternalRegistry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Chain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkflowServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=base__pb2.Empty.FromString,
                    response_serializer=workflow__pb2.Workflow.SerializeToString,
            ),
            'GetFromInternalRegistry': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFromInternalRegistry,
                    request_deserializer=workflow__pb2.WorkflowFromInternalRegistryRequest.FromString,
                    response_serializer=workflow__pb2.Workflow.SerializeToString,
            ),
            'UpdateConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConnection,
                    request_deserializer=workflow__pb2.UpdateConnectionRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'UpdatePinNames': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePinNames,
                    request_deserializer=workflow__pb2.UpdatePinNamesRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'AddOperators': grpc.unary_unary_rpc_method_handler(
                    servicer.AddOperators,
                    request_deserializer=workflow__pb2.AddOperatorsRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=workflow__pb2.WorkflowEvaluationRequest.FromString,
                    response_serializer=workflow__pb2.WorkflowResponse.SerializeToString,
            ),
            'RecordInInternalRegistry': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordInInternalRegistry,
                    request_deserializer=workflow__pb2.RecordInInternalRegistryRequest.FromString,
                    response_serializer=workflow__pb2.RecordInInternalRegistryResponse.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=workflow__pb2.Workflow.FromString,
                    response_serializer=workflow__pb2.ListResponse.SerializeToString,
            ),
            'Chain': grpc.unary_unary_rpc_method_handler(
                    servicer.Chain,
                    request_deserializer=workflow__pb2.ChainRequest.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=workflow__pb2.Workflow.FromString,
                    response_serializer=base__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ansys.api.dpf.workflow.v0.WorkflowService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WorkflowService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.workflow.v0.WorkflowService/Create',
            base__pb2.Empty.SerializeToString,
            workflow__pb2.Workflow.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFromInternalRegistry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.workflow.v0.WorkflowService/GetFromInternalRegistry',
            workflow__pb2.WorkflowFromInternalRegistryRequest.SerializeToString,
            workflow__pb2.Workflow.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.workflow.v0.WorkflowService/UpdateConnection',
            workflow__pb2.UpdateConnectionRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePinNames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.workflow.v0.WorkflowService/UpdatePinNames',
            workflow__pb2.UpdatePinNamesRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddOperators(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.workflow.v0.WorkflowService/AddOperators',
            workflow__pb2.AddOperatorsRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.workflow.v0.WorkflowService/Get',
            workflow__pb2.WorkflowEvaluationRequest.SerializeToString,
            workflow__pb2.WorkflowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecordInInternalRegistry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.workflow.v0.WorkflowService/RecordInInternalRegistry',
            workflow__pb2.RecordInInternalRegistryRequest.SerializeToString,
            workflow__pb2.RecordInInternalRegistryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.workflow.v0.WorkflowService/List',
            workflow__pb2.Workflow.SerializeToString,
            workflow__pb2.ListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Chain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.workflow.v0.WorkflowService/Chain',
            workflow__pb2.ChainRequest.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ansys.api.dpf.workflow.v0.WorkflowService/Delete',
            workflow__pb2.Workflow.SerializeToString,
            base__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
