Metadata-Version: 2.1
Name: ThetaSynthesis
Version: 0.1.0
Summary: UNKNOWN
Home-page: https://github.com/dcloudf/ThetaSynthesis
Author: Alexander Sizov
Author-email: 
License: LGPLv3
Platform: UNKNOWN
Classifier: Environment :: Plugins
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Chemistry
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Software Development
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8.1
Requires-Dist: CGRtools (<4.2,>=4.1)
Requires-Dist: tqdm
Requires-Dist: StructureFingerprint
Requires-Dist: torch
Requires-Dist: pytorch-lightning
Requires-Dist: torchmetrics

ThetaSynthesis
--------------

Retrosynthesis analysis tool


API Example::

    from CGRtools import smiles, RDFWrite
    from ThetaSynthesis import RetroTree
    from ThetaSynthesis.synthon import RolloutSynthon


    target = smiles('CC(=O)NC1=CC=C(O)C=C1')
    target.canonicalize()

    tree = RetroTree(target, synthon_class=RolloutSynthon)

    with RDFWrite('acetaminophen.rdf') as f:
        for n in tree:
            path = tree.synthesis_path(n)
            for r in path:
                r.clean2d()
                f.write(r)

    print(tree.report())


