{"version":3,"sources":["webpack://jupyter-fs/./lib/icons.js","webpack://jupyter-fs/./style/icons/drive.svg","webpack://jupyter-fs/./style/icons/file-tree.svg","webpack://jupyter-fs/./style/icons/jupyter-fs.svg","webpack://jupyter-fs/./style/icons/visibility.svg","webpack://jupyter-fs/./style/icons/visibility-off.svg","webpack://jupyter-fs/./lib/auth.js","webpack://jupyter-fs/./lib/filesystem.js","webpack://jupyter-fs/./lib/clipboard.js","webpack://jupyter-fs/./lib/treefinder.js","webpack://jupyter-fs/./lib/index.js"],"names":["LabIcon","name","svgstr","fileTreeIcon","visibilityIcon","visibilityOffIcon","DoubleBraceTemplate","template","this","pattern","dict","replace","_","p1","toks","match","exec","push","super","arguments","tokensFromUrl","url","tokens","_askRequired","spec","auth","init","AskDialog","props","options","state","initialState","open","Dialog","className","onClose","_onClose","bind","DialogTitle","DialogContent","_form","DialogActions","Button","onClick","color","_onSubmit","onSubmit","noValidate","autoComplete","_formInner","resources","map","resource","inputs","_inputs","reason","cache","length","summary","ExpansionPanel","disabled","expanded","key","ExpansionPanelSummary","Typography","ExpansionPanelDetails","token","_a","_b","_c","TextField","autoFocus","fullWidth","label","margin","onChange","_onChange","type","visibility","value","values","InputProps","endAdornment","InputAdornment","position","IconButton","_onClickVisiblity","onMouseDown","_onMouseDownVisibility","edge","react","event","target","_setValue","_toggleVisibility","preventDefault","setState","handleClose","handleSubmit","urlValues","urlVis","displayName","FSComm","_settings","undefined","baseUrl","settings","ServerConnection","URLExt","fullUrl","resourcesUrl","method","then","response","status","text","data","json","args","body","JSON","stringify","headers","JupyterClipboard","tracker","_model","ClipboardModel","_drive","Drive","_tracker","deleteSub","subscribe","async","memo","Promise","all","s","_onDelete","model","refresh","currentWidget","treefinder","pasteSub","destination","doCut","destPathstr","Path","kind","path","slice","_onPaste","tm","selection","x","row","src","srcPathstr","delete","copy","JupyterContents","cm","drive","toFullPath","toJupyterContentRow","get","startsWith","join","toLocalPath","first","rest","split","pop","pathWithDrive","getChildren","content","c","TreeFinderTracker","WidgetTracker","_finders","Map","finder","set","id","disposed","connect","_onWidgetDisposed","add","disconnect","has","remove","TreeFinderWidget","Widget","app","rootPath","commands","serviceManager","contents","node","document","createElement","addClass","root","gridOptions","columnFormatters","last_modified","Format","size","doWindowResize","showFilter","modelOptions","columnNames","openSub","rows","forEach","execute","requestDraw","refreshSub","next","TreeFinderSidebar","caption","title","icon","closable","commandIDs","Object","fromEntries","commandNames","toolbar","Toolbar","layout","PanelLayout","addWidget","msg","draw","sidebar","manager","paths","resolver","restorer","router","side","selector","widget","shell","refresh_button","ToolbarButton","refreshIcon","tooltip","addItem","addCommand","clipboard","copySelection","copyIcon","cut","cutSelection","cutIcon","deleteSelection","closeIcon","stylesheet","paste","pasteSelection","pasteIcon","refreshSelection","contextMenu","command","rank","reduce","d","DisposableSet","namespace","sidebarFromResource","activate","autoStart","requires","IDocumentManager","JupyterFrontEnd","IWindowResolver","ILayoutRestorer","IRouter","ISettingRegistry","settingRegistry","comm","disposable","sidebarProps","load","error","console","warn","refreshWidgets","verbose","info","r","dispose","composite","initResourceRequest","_addServerside","specs","askRequired","dialogElem","appendChild","tokenDict","changed"],"mappings":"uOAcyB,IAAI,EAAAA,QAAQ,CAAEC,KAAM,YAAaC,OCd1D,qYDeaC,EAAe,IAAI,EAAAH,QAAQ,CAAEC,KAAM,gBAAiBC,OEfjE,wMFiBaE,GADgB,IAAI,EAAAJ,QAAQ,CAAEC,KAAM,iBAAkBC,OGhBnE,u2BHiB8B,IAAI,EAAAF,QAAQ,CAAEC,KAAM,iBAAkBC,OIjBpE,kWJkBaG,EAAoB,IAAI,EAAAL,QAAQ,CAAEC,KAAM,qBAAsBC,OKlB3E,yoBC6BO,MAAMI,UAlBb,MACI,YAAYC,GACRC,KAAKD,SAAWA,EAChBC,KAAKC,QAAU,OAEnB,WAAWC,GACP,OAAOF,KAAKD,SAASI,QAAQH,KAAKC,SAAS,CAACG,EAAGC,IAAOH,EAAKG,KAE/D,SACI,MAAMC,EAAO,GACb,IAAIC,EAEJ,KAAQA,EAAQP,KAAKC,QAAQO,KAAKR,KAAKD,WACnCO,EAAKG,KAAKF,EAAM,IAEpB,OAAOD,IAIX,cACII,SAASC,WACTX,KAAKC,QAAU,eAGvB,SAASW,EAAcC,GACnB,OAAO,IAAIf,EAAoBe,GAAKC,SAExC,SAASC,EAAaC,GAClB,MAAqB,QAAdA,EAAKC,OAAmBD,EAAKE,KAUjC,MAAMC,UAAkB,YAC3B,YAAYC,EAAOC,GACfX,MAAMU,GACNpB,KAAKsB,MAAQH,EAAUI,aAAa,CAAEC,MAAM,EAAMH,YAEtD,SACI,OAAQ,gBAAoB,MAAO,KAC/B,gBAAoB,EAAAI,OAAQ,CAAEC,UAAW,iBAAkBF,KAAMxB,KAAKsB,MAAME,KAAMG,QAAS3B,KAAK4B,SAASC,KAAK7B,OAC1G,gBAAoB,EAAA8B,YAAa,CAAEJ,UAAW,gCAAkC,sDAChF,gBAAoB,EAAAK,cAAe,CAAEL,UAAW,kCAAoC1B,KAAKgC,SACzF,gBAAoB,EAAAC,cAAe,CAAEP,UAAW,kCAC5C,gBAAoB,EAAAQ,OAAQ,CAAER,UAAW,+CAAgDS,QAASnC,KAAK4B,SAASC,KAAK7B,MAAOoC,MAAO,WAAa,UAChJ,gBAAoB,EAAAF,OAAQ,CAAER,UAAW,+CAAgDS,QAASnC,KAAKqC,UAAUR,KAAK7B,MAAOoC,MAAO,WAAa,aAEjK,QACI,OAAQ,gBAAoB,OAAQ,CAAEV,UAAW,uBAAwBY,SAAUtC,KAAKqC,UAAUR,KAAK7B,MAAOuC,YAAY,EAAMC,aAAc,OAASxC,KAAKyC,cAEhK,aACI,OAAOzC,KAAKoB,MAAMsB,UAAUC,KAAIC,IAE5B,MACMC,EADS9B,EAAa6B,GACJ5C,KAAK8C,QAAQF,EAAS/B,KAAO,GAC/CC,EAASF,EAAcgC,EAAS/B,KACtC,IAAIkC,EAAS,GACTH,EAAS1B,MAAQlB,KAAKoB,MAAMC,QAAQ2B,MACpCD,EAAS,sBAEHjC,EAAOmC,SACbF,EAAS,0BAEb,MAAMG,EAAU,GAAGN,EAASnD,QAAQsD,GAAU,IAAIA,MAClD,MAAO,CACH,gBAAoB,EAAAI,eAAgB,CAAEzB,UAAW,wBAAyB0B,WAAYL,EAAQM,UAAWN,EAAQO,IAAK,GAAGV,EAASnD,cAC9H,gBAAoB,EAAA8D,sBAAuB,CAAE7B,UAAW,iCACpD,gBAAoB,EAAA8B,WAAY,KAAMN,IACrCH,GAAU,gBAAoB,EAAAS,WAAY,KAAMZ,EAAS/B,MAC9D,gBAAoB,EAAA4C,sBAAuB,CAAE/B,UAAW,iCAAmCmB,QAI3G,QAAQhC,GACJ,OAAOD,EAAcC,GAAK8B,KAAIe,IAC1B,IAAIC,EAAIC,EAAIC,EACZ,OAAQ,gBAAoB,EAAAC,UAAW,CAAEpC,UAAW,wBAAyBqC,WAAW,EAAMC,WAAW,EAAMV,IAAK,GAAGzC,KAAO6C,IAASO,MAAOP,EAAOQ,OAAQ,QAASzE,KAAMiE,EAAOS,SAAUnE,KAAKoE,UAAUvD,GAAKgB,KAAK7B,MAAOqE,MAA6C,QAArCV,EAAK3D,KAAKsB,MAAMgD,WAAWzD,UAAyB,IAAP8C,OAAgB,EAASA,EAAGD,IAAU,OAAS,WAAYa,OAA0C,QAAjCX,EAAK5D,KAAKsB,MAAMkD,OAAO3D,UAAyB,IAAP+C,OAAgB,EAASA,EAAGF,KAAW,GAAIe,WAAY,CAC9aC,aAAe,gBAAoB,EAAAC,eAAgB,CAAEC,SAAU,OAC3D,gBAAoB,EAAAC,WAAY,CAAE1C,QAASnC,KAAK8E,kBAAkBjE,EAAK6C,GAAO7B,KAAK7B,MAAO+E,YAAa/E,KAAKgF,uBAAuBnD,KAAK7B,MAAOiF,KAAM,QAAgD,QAArCpB,EAAK7D,KAAKsB,MAAMgD,WAAWzD,UAAyB,IAAPgD,OAAgB,EAASA,EAAGH,IAAW,gBAAoB9D,EAAesF,MAAO,MAAU,gBAAoBrF,EAAkBqF,MAAO,cAIzW,UAAUrE,GACN,OAAO,SAAUsE,GACb,MAAMC,EAASD,EAAMC,OACrBpF,KAAKqF,UAAUxE,EAAKuE,EAAO3F,KAAM2F,EAAOb,QAGhD,kBAAkB1D,EAAKyC,GACnB,OAAO,WACHtD,KAAKsF,kBAAkBzE,EAAKyC,IAGpC,uBAAuB6B,GACnBA,EAAMI,iBAEV,UACIvF,KAAKwF,SAAS,CAAEhE,MAAM,IAE1B,WAEIxB,KAAKwF,SAASrE,EAAUI,aAAa,CAAEF,QAASrB,KAAKsB,MAAMD,WAC3DrB,KAAKoB,MAAMqE,cAEf,gBAAgBN,GACZA,EAAMI,iBACNvF,KAAKoB,MAAMsE,aAAa1F,KAAKsB,MAAMkD,QACnCxE,KAAK4B,WAET,UAAUf,EAAKyC,EAAKiB,GAChB,MAAMoB,EAAY,IAAK3F,KAAKsB,MAAMkD,OAAO3D,GAAM,CAACyC,GAAMiB,GACtDvE,KAAKwF,SAAS,CACVhB,OAAQ,IAAKxE,KAAKsB,MAAMkD,OAAQ,CAAC3D,GAAM8E,KAG/C,kBAAkB9E,EAAKyC,GACnB,IAAIK,EACJ,MAAMiC,EAAS,IACR5F,KAAKsB,MAAMgD,WAAWzD,GACzB,CAACyC,KAA8C,QAArCK,EAAK3D,KAAKsB,MAAMgD,WAAWzD,UAAyB,IAAP8C,OAAgB,EAASA,EAAGL,KAEvFtD,KAAKwF,SAAS,CACVlB,WAAY,IAAKtE,KAAKsB,MAAMgD,WAAY,CAACzD,GAAM+E,MAI3DzE,EAAU0E,YAAc,YAIxB,SAAW1E,GAIPA,EAAUI,aAAe,EAAGC,QAAO,EAAOH,cAAe,CACrDG,OACAH,QAAS,IAAKA,GACdmD,OAAQ,GACRF,WAAY,KARpB,CAUGnD,IAAcA,EAAY,K,sBCxHtB,MAAM2E,UA1Bb,MACI,YAAY1E,EAAQ,IAChBpB,KAAK+F,eAAYC,EACjB,MAAM,QAAEC,GAAY7E,EAChB6E,IACAjG,KAAKiG,QAAUA,GAGvB,cACI,OAAOjG,KAAKkG,SAASD,QAEzB,YAAYA,GACJA,IAAYjG,KAAKiG,UACjBjG,KAAK+F,UAAY,EAAAI,iBAAA,aAA8B,CAAEF,aAGzD,mBACI,OAAO,EAAAG,OAAA,KAAYpG,KAAKiG,QAAS,uBAErC,eAII,OAHKjG,KAAK+F,YACN/F,KAAK+F,UAAY,EAAAI,iBAAA,gBAEdnG,KAAK+F,YAIhB,4BACI,MAAMG,EAAWlG,KAAKkG,SAChBG,EAAUrG,KAAKsG,aACrB,OAAO,EAAAH,iBAAA,YAA6BE,EAAS,CAAEE,OAAQ,OAASL,GAAUM,MAAKC,GACnD,MAApBA,EAASC,OACFD,EAASE,OAAOH,MAAKI,IACxB,MAAM,IAAI,EAAAT,iBAAA,cAA+BM,EAAUG,MAGpDH,EAASI,SAGxB,0BAA0BC,GACtB,MAAMZ,EAAWlG,KAAKkG,SAChBG,EAAUrG,KAAKsG,aACrB,OAAO,EAAAH,iBAAA,YAA6BE,EAAS,CACzCU,KAAMC,KAAKC,UAAUH,GACrBI,QAAS,CACL,eAAgB,oBAEpBX,OAAQ,QACTL,GAAUM,MAAKC,GACU,MAApBA,EAASC,OACFD,EAASE,OAAOH,MAAKI,IACxB,MAAM,IAAI,EAAAT,iBAAA,cAA+BM,EAAUG,MAGpDH,EAASI,U,sBC9DrB,MAAMM,EACT,YAAYC,GACRpH,KAAKqH,OAAS,IAAI,EAAAC,eAClBtH,KAAKuH,OAAS,IAAI,EAAAC,MAClBxH,KAAKyH,SAAWL,EAEhBpH,KAAKqH,OAAOK,UAAUC,WAAUC,MAAOC,UAC7BC,QAAQC,IAAIF,EAAKlF,KAAIqF,GAAKhI,KAAKiI,UAAUD,MAC/ChI,KAAKkI,MAAMC,QAAQnI,KAAKyH,SAASW,cAAcC,WAAWH,MAAOL,MAGrE7H,KAAKqH,OAAOiB,SAASX,WAAUC,OAASW,cAAaC,QAAOX,WACxD,MAAMY,EAAc,EAAAC,KAAA,UAAoC,QAArBH,EAAYI,KAAiBJ,EAAYK,KAAOL,EAAYK,KAAKC,MAAM,GAAI,UACxGf,QAAQC,IAAIF,EAAKlF,KAAIqF,GAAKhI,KAAK8I,SAASd,EAAGS,EAAaD,MAC9DxI,KAAKkI,MAAMC,QAAQnI,KAAKyH,SAASW,cAAcC,WAAWH,MAAO,CAACK,KAAgBV,OAG1F,QAAQkB,EAAIlB,GACRkB,UAAqCA,EAAK/I,KAAKyH,SAASW,cAAcC,WAAWH,OACjFlI,KAAKkI,MAAMC,QAAQY,EAAIlB,GAG3B,iBAAiBkB,GACb/I,KAAKmI,QAAQY,EAAIA,EAAGC,UAAUrG,KAAIsG,GAAKA,EAAEC,OAE7C,YACI,OAAOlJ,KAAKqH,OAEhB,gBAAgB8B,GACZ,MAAMC,EAAa,EAAAV,KAAA,UAAeS,EAAIP,YAChC5I,KAAKuH,OAAO8B,OAAOD,GAE7B,eAAeD,EAAKV,EAAaD,GAC7B,MAAMY,EAAa,EAAAV,KAAA,UAAeS,EAAIP,YAChC5I,KAAKuH,OAAO+B,KAAKF,EAAYX,GAC/BD,SACMxI,KAAKuH,OAAO8B,OAAOD,IC7B9B,MAAMG,EACT,YAAYC,EAAIC,GACZzJ,KAAKwJ,GAAKA,EACVxJ,KAAKyJ,MAAQA,EAEjB,UAAUb,GAEN,OADAA,EAAOW,EAAgBG,WAAWd,EAAM5I,KAAKyJ,OACtCF,EAAgBI,0BAA0B3J,KAAKwJ,GAAGI,IAAIhB,GAAO5I,KAAKwJ,GAAIxJ,KAAKyJ,SAG1F,SAAWF,GACP,SAASG,EAAWd,EAAMa,GACtB,OAASA,GAASb,EAAKiB,WAAW,GAAGJ,MAAab,EAAO,CAACa,EAAOb,GAAMkB,KAAK,KAEhFP,EAAgBG,WAAaA,EAK7BH,EAAgBQ,YAJhB,SAAqBnB,GACjB,MAAOoB,KAAUC,GAAQrB,EAAKsB,MAAM,KACpC,MAAO,CAACF,EAAME,MAAM,KAAKC,SAAUF,GAAMH,KAAK,MAgBlDP,EAAgBI,oBAbhB,SAASA,EAAoBT,EAAKM,EAAIC,GAClC,MAAM,KAAEb,EAAI,KAAEvE,KAAS4F,GAASf,EAC1BkB,EAAgBV,EAAWd,EAAMa,GACjCd,EAAgB,cAATtE,EAAuB,MAAQA,EAC5C,MAAO,CACHuE,KAAM,EAAAF,KAAA,QAAa0B,GACnBzB,UACGsB,KACU,QAATtB,EAAiB,CACjB0B,YAAazC,gBAAmB4B,EAAGI,IAAIQ,EAAe,CAAEE,SAAS,KAASA,QAAQ3H,KAAK4H,GAAMZ,EAAoBY,EAAGf,EAAIC,MACxH,KApBhB,CAwBGF,IAAoBA,EAAkB,KAClC,MAAMiB,UAA0B,EAAAC,cACnC,cACI/J,SAASC,WACTX,KAAK0K,SAAW,IAAIC,IAExB,UAAUC,GAIN,OAHA5K,KAAK0K,SAASG,IAAID,EAAOE,GAAIF,GAE7BA,EAAOG,SAASC,QAAQhL,KAAKiL,kBAAmBjL,MACzCU,MAAMwK,IAAIN,GAErB,OAAOA,GACH5K,KAAK0K,SAASrB,OAAOuB,EAAOE,IAE5BF,EAAOG,SAASI,WAAWnL,KAAKiL,kBAAmBjL,MAEvD,YAAYyJ,GACR,OAAOzJ,KAAK0K,SAASd,IAAIH,GAE7B,WAAWA,GACP,OAAOzJ,KAAK0K,SAASU,IAAI3B,GAE7B,kBAAkBmB,GACd5K,KAAKqL,OAAOT,IAGb,MAAMU,UAAyB,EAAAC,OAClC,aAAY,IAAEC,EAAG,SAAEC,EAAW,KAC1B,MAAM,SAAEC,EAAUC,gBAAgB,SAAEC,IAAeJ,EAEnD9K,MAAM,CAAEmL,KADKC,SAASC,cAAc,uBAEpC/L,KAAKgM,SAAS,kBACdhM,KAAKwJ,GAAK,IAAID,EAAgBqC,EAAUH,GACxCA,EAAwB,KAAbA,EAAkBA,EAAWA,EAAW,IAC9CzL,KAAKwJ,GAAGI,IAAI6B,GAAUjF,MAAKyF,GAAQjM,KAAK6L,KAAK3K,KAAK,CACnD+K,OACAC,YAAa,CACTC,iBAAkB,CACdC,cAAgBnD,GAAK,EAAAoD,OAAA,UAAiBpD,GACtCqD,KAAOrD,GAAK,EAAAoD,OAAA,qBAA4BpD,IAE5CsD,gBAAgB,EAChBC,YAAY,GAEhBC,aAAc,CACVC,YAAa,CAAC,OAAQ,WAAY,sBAEtClG,MAAK,KACLxG,KAAKkI,MAAMyE,QAAQhF,WAAUiF,GAAQA,EAAKC,SAAQ3D,IACzCA,EAAImB,aACAqB,EAASoB,QAAQ,kBAAmB,CAAElE,KAAM,EAAAF,KAAA,UAAeQ,EAAIN,gBAKpF,OACI5I,KAAKkI,MAAM6E,cAEf,UACI/M,KAAKkI,MAAM8E,WAAWC,OAE1B,YACI,OAAOjN,KAAK6L,KAAK3D,MAErB,gBACI,OAAOlI,KAAKkI,MAAMc,UAEtB,wBACI,OAAOhJ,KAAKkI,MAAMc,UAAUrG,KAAI4H,GAAK,EAAA7B,KAAA,UAAe6B,EAAErB,IAAIN,SAG3D,MAAMsE,UAA0B,EAAA3B,OACnC,aAAY,IAAEC,EAAG,SAAEC,EAAW,GAAE,QAAE0B,EAAU,aAAY,GAAErC,EAAK,2BAC3DpK,QACAV,KAAK8K,GAAKA,EACV9K,KAAKoN,MAAMC,KAAO1N,EAClBK,KAAKoN,MAAMD,QAAUA,EACrBnN,KAAKoN,MAAME,UAAW,EACtBtN,KAAKgM,SAAS,0BAGdhM,KAAKuN,WAAaC,OAAOC,YAAYP,EAAkBQ,aAAa/K,KAAIlD,GAAQ,CAACA,EAAM,GAAGO,KAAK8K,iBAAiBrL,QAEhHO,KAAK2N,QAAU,IAAI,EAAAC,QACnB5N,KAAK2N,QAAQ3B,SAAS,0BAEtBhM,KAAKqI,WAAa,IAAIiD,EAAiB,CAAEE,MAAKC,aAC9CzL,KAAK6N,OAAS,IAAI,EAAAC,YAClB9N,KAAK6N,OAAOE,UAAU/N,KAAK2N,SAC3B3N,KAAK6N,OAAOE,UAAU/N,KAAKqI,YAE/B,UACIrI,KAAKqI,WAAWF,UAuDpB,aAAa6F,GACThO,KAAKqI,WAAWF,UAChBnI,KAAKqI,WAAW4F,OAEpB,SAASD,GACLhO,KAAKqI,WAAW4F,SAIxB,SAAWf,GAuBP,SAASgB,GAAQ,IAAE1C,EAAG,QAAE2C,EAAO,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,EAAQ,OAAEC,EAAM,SAAE9C,EAAW,GAAE,QAAE0B,EAAU,aAAY,GAAErC,EAAK,yBAAwB,KAAE0D,EAAO,SAC7I,MAAMC,EAAW,IAAI3D,IACf4D,EAAS,IAAIxB,EAAkB,CAAE1B,MAAKC,WAAU0B,UAASrC,OAC1DoC,EAAkB9F,QAAQ8D,IAAIwD,GACnCJ,EAASpD,IAAIwD,EAAQA,EAAO5D,IAC5BU,EAAImD,MAAMzD,IAAIwD,EAAQF,GAStB,MAAMI,EAAiB,IAAI,EAAAC,cAAc,CACrCxB,KAAM,EAAAyB,YACN3M,QAAS,KACAqJ,EAAIE,SAASoB,QAAQ4B,EAAOnB,WAAWpF,UAEhD4G,QAAS,YAiBb,OAbAL,EAAOf,QAAQqB,QAAQ,UAAWJ,GAa3B,CAEHpD,EAAIE,SAASuD,WAAWP,EAAOnB,WAAWjE,KAAM,CAC5CwD,QAAShG,GAAQoG,EAAkBgC,UAAUhH,MAAMiH,cAAcT,EAAOrG,WAAWH,OACnFmF,KAAM,EAAA+B,SACNnL,MAAO,SAEXuH,EAAIE,SAASuD,WAAWP,EAAOnB,WAAW8B,IAAK,CAC3CvC,QAAShG,GAAQoG,EAAkBgC,UAAUhH,MAAMoH,aAAaZ,EAAOrG,WAAWH,OAClFmF,KAAM,EAAAkC,QACNtL,MAAO,QAEXuH,EAAIE,SAASuD,WAAWP,EAAOnB,WAAWlE,OAAQ,CAC9CyD,QAAShG,GAAQoG,EAAkBgC,UAAUhH,MAAMsH,gBAAgBd,EAAOrG,WAAWH,OACrFmF,KAAM,EAAAoC,UAAA,UAAoB,CAAEC,WAAY,aACxCzL,MAAO,WAEXuH,EAAIE,SAASuD,WAAWP,EAAOnB,WAAW/L,KAAM,CAC5CsL,QAAShG,GAAQ4H,EAAOrG,WAAWH,MAAMyE,QAAQM,KAAKyB,EAAOrG,WAAWW,UAAUrG,KAAI4H,GAAKA,EAAErB,OAC7FjF,MAAO,SAEXuH,EAAIE,SAASuD,WAAWP,EAAOnB,WAAWoC,MAAO,CAC7C7C,QAAShG,GAAQoG,EAAkBgC,UAAUhH,MAAM0H,eAAelB,EAAOrG,WAAWH,OACpFmF,KAAM,EAAAwC,UACN5L,MAAO,UAEXuH,EAAIE,SAASuD,WAAWP,EAAOnB,WAAWpF,QAAS,CAC/C2E,QAAShG,GAAQA,EAAgB,UAAIoG,EAAkBgC,UAAUY,iBAAiBpB,EAAOrG,WAAWH,OAASgF,EAAkBgC,UAAU/G,QAAQuG,EAAOrG,WAAWH,OACnKmF,KAAM,EAAAyB,YACN7K,MAAO6C,GAAQA,EAAgB,UAAI,oBAAsB,YAG7D0E,EAAIuE,YAAYf,QAAQ,CACpBgB,QAAStB,EAAOnB,WAAW/L,KAC3BiN,WACAwB,KAAM,IAEVzE,EAAIuE,YAAYf,QAAQ,CACpBgB,QAAStB,EAAOnB,WAAWjE,KAC3BmF,WACAwB,KAAM,IAEVzE,EAAIuE,YAAYf,QAAQ,CACpBgB,QAAStB,EAAOnB,WAAW8B,IAC3BZ,WACAwB,KAAM,IAEVzE,EAAIuE,YAAYf,QAAQ,CACpBgB,QAAStB,EAAOnB,WAAWoC,MAC3BlB,WACAwB,KAAM,IAEVzE,EAAIuE,YAAYf,QAAQ,CACpBgB,QAAStB,EAAOnB,WAAWlE,OAC3BoF,WACAwB,KAAM,IAEVzE,EAAIuE,YAAYf,QAAQ,CACpBlI,KAAM,CAAEkC,WAAW,GACnBgH,QAAStB,EAAOnB,WAAWpF,QAC3BsG,WACAwB,KAAM,KAGVvB,GACFwB,QAAO,CAACrF,EAAKsF,KACXtF,EAAIK,IAAIiF,GACDtF,IACR,IAAI,EAAAuF,eA5HXlD,EAAkBQ,aAAe,CAC7B,OACA,MACA,SACA,OACA,QACA,UACA,UAEJR,EAAkB9F,QAAU,IAAIoD,EAAkB,CAAE6F,UAXlC,0BAYlBnD,EAAkBgC,UAAY,IAAI/H,EAAiB+F,EAAkB9F,SASrE8F,EAAkBoD,oBARlB,SAA6B1N,EAAUxB,GACnC,OAAO8M,EAAQ,IACR9M,EACHqK,SAAU7I,EAAS6G,MACnB0D,QAAS,GAAGvK,EAASnD,kBACrBqL,GAAI,CAAClI,EAASnD,KAAKyK,MAAM,KAAKJ,KAAK,IAAKlH,EAAS6G,OAAOK,KAAK,QA8GrEoD,EAAkBgB,QAAUA,EAjIhC,CAkIGhB,IAAsBA,EAAoB,KCvT7C,MAAM,EAAS,CACXqD,WACAC,WAAW,EACX1F,GAAI,oBACJ2F,SAAU,CACN,EAAAC,iBACA,EAAAC,gBAAA,OACA,EAAAC,gBACA,EAAAC,gBACA,EAAAC,QACA,EAAAC,mBAGRnJ,eAAe2I,EAAS/E,EAAK2C,EAASC,EAAOC,EAAUC,EAAUC,EAAQyC,GACrE,MAAMC,EAAO,IAAInL,EACjB,IAAIoL,EAAa,IAAI,EAAAd,cACrB,MAAMe,EAAe,CACjB3F,MACA2C,UACAC,QACAC,WACAC,WACAC,UAGJ,IAAIrI,EACJ,IACIA,QAAiB8K,EAAgBI,KAAK,EAAOtG,IAEjD,MAAOuG,GAEHC,QAAQC,KAAK,0DAA0DF,KAE3EzJ,eAAe4J,GAAe,UAAE9O,EAAS,QAAErB,IACnCA,EAAQoQ,SAERH,QAAQI,KAAK,4CAA4ChP,KAG7D,IAAK,MAAMiP,KAAKjP,EAEZwO,EAAWhG,IAAIgC,EAAkBoD,oBAAoBqB,EAAGR,IAGhEvJ,eAAeO,IAEX+I,EAAWU,UACXV,EAAa,IAAI,EAAAd,cAEjB,IAAI1N,EAAYwD,EAAS2L,UAAUnP,UACnC,MAAMrB,EAAU6E,EAAS2L,UAAUxQ,QAUnC,GAPAqB,QAAkBuO,EAAKa,oBAAoB,CACvCpP,YACArB,QAAS,IACFA,EACH0Q,gBAAgB,KJnCzB,SAAqBC,GACxB,IAAK,MAAMhR,KAAQgR,EACf,GAAIjR,EAAaC,GACb,OAAO,EAGf,OAAO,EIgCCiR,CAAYvP,GAAY,CAExB,MAAMwP,EAAapG,SAASC,cAAc,OAC1CD,SAAS/E,KAAKoL,YAAYD,GAC1B,MAAMzM,EAAc,KAChB,yBAAgCyM,GAChCA,EAAW7G,UAET3F,EAAekC,MAAOpD,UAClBgN,EAAe,CACjB9O,gBAAiBuO,EAAKa,oBAAoB,CACtCpP,UAAWA,EAAUC,KAAIgP,IAAK,IAAMA,EAAGS,UAAW5N,EAAOmN,EAAE9Q,SAC3DQ,YAEJA,aAGR,SAAgB,gBAAoBF,EAAW,CAAEsE,YAAaA,EAAaC,aAAcA,EAAcrE,QAASA,EAASqB,UAAWA,IAAcwP,cAI5IV,EAAe,CAAEnQ,UAASqB,cAGpCwD,IAEKiC,IAGLjC,EAASmM,QAAQrH,QAAQ7C,IAGjC","file":"838.0bce54ce935393d4dc38.js?v=0bce54ce935393d4dc38","sourcesContent":["/******************************************************************************\n *\n * Copyright (c) 2019, the jupyter-fs authors.\n *\n * This file is part of the jupyter-fs library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport { LabIcon } from \"@jupyterlab/ui-components\";\nimport driveSvgstr from \"../style/icons/drive.svg\";\nimport fileTreeSvgstr from \"../style/icons/file-tree.svg\";\nimport jupyterFsSvgstr from \"../style/icons/jupyter-fs.svg\";\nimport visibilitySvgstr from \"../style/icons/visibility.svg\";\nimport visibilityOffSvgstr from \"../style/icons/visibility-off.svg\";\nexport const driveIcon = new LabIcon({ name: \"jfs:drive\", svgstr: driveSvgstr });\nexport const fileTreeIcon = new LabIcon({ name: \"jfs:file-tree\", svgstr: fileTreeSvgstr });\nexport const jupyterFsIcon = new LabIcon({ name: \"jfs:jupyter-fs\", svgstr: jupyterFsSvgstr });\nexport const visibilityIcon = new LabIcon({ name: \"jfs:visibility\", svgstr: visibilitySvgstr });\nexport const visibilityOffIcon = new LabIcon({ name: \"jfs:visibility-off\", svgstr: visibilityOffSvgstr });\n//# sourceMappingURL=icons.js.map","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\">\\n  <path class=\\\"jp-icon3 jp-icon-selectable\\\" stroke=\\\"#616161\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" d=\\\"M22 12H2M5.45 5.11L2 12v6a2 2 0 002 2h16a2 2 0 002-2v-6l-3.45-6.89A2 2 0 0016.76 4H7.24a2 2 0 00-1.79 1.11zM6 16h.01M10 16h.01\\\"/>\\n</svg>\\n\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" width=\\\"20\\\" viewBox=\\\"0 0 16 16\\\">\\n  <path class=\\\"jp-icon3\\\" fill=\\\"#616161\\\" d=\\\"M16 10V6H5v1H3V4h9V0H0v4h2v10h3v2h11v-4H5v1H3V8h2v2z\\\"/>\\n</svg>\\n\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" version=\\\"1.1\\\" width=\\\"500\\\" viewBox=\\\"0 0 100 100\\\">\\n  <rect class=\\\"jp-icon3\\\" stroke=\\\"#616161\\\" stroke-width=\\\"4\\\" width=\\\"91\\\" height=\\\"21\\\" fill=\\\"none\\\" rx=\\\"4\\\" x=\\\"4.5\\\" y=\\\"9.5\\\"/>\\n  <circle class=\\\"jp-icon3\\\" fill=\\\"#616161\\\" cx=\\\"85\\\" cy=\\\"20\\\" r=\\\"3\\\"/>\\n  <circle class=\\\"jp-icon3\\\" fill=\\\"#616161\\\" cx=\\\"73\\\" cy=\\\"20\\\" r=\\\"3\\\"/>\\n\\n  <rect class=\\\"jp-icon3\\\" stroke=\\\"#616161\\\" stroke-width=\\\"4\\\" width=\\\"91\\\" height=\\\"21\\\" fill=\\\"none\\\" rx=\\\"4\\\" x=\\\"4.5\\\" y=\\\"39.5\\\"/>\\n  <circle class=\\\"jp-icon3\\\" fill=\\\"#616161\\\" cx=\\\"85\\\" cy=\\\"50\\\" r=\\\"3\\\"/>\\n  <circle class=\\\"jp-icon3\\\" fill=\\\"#616161\\\" cx=\\\"73\\\" cy=\\\"50\\\" r=\\\"3\\\"/>\\n\\n  <rect class=\\\"jp-icon3\\\" stroke=\\\"#616161\\\" stroke-width=\\\"4\\\" width=\\\"91\\\" height=\\\"21\\\" fill=\\\"none\\\" rx=\\\"4\\\" x=\\\"4.5\\\" y=\\\"69.5\\\"/>\\n  <circle class=\\\"jp-icon3\\\" fill=\\\"#616161\\\" cx=\\\"85\\\" cy=\\\"80\\\" r=\\\"3\\\"/>\\n  <circle class=\\\"jp-icon3\\\" fill=\\\"#616161\\\" cx=\\\"73\\\" cy=\\\"80\\\" r=\\\"3\\\"/>\\n</svg>\\n\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\" height=\\\"24\\\">\\n  <path class=\\\"jp-icon3\\\" fill=\\\"#616161\\\" d=\\\"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\\\"/>\\n</svg>\";","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\" height=\\\"24\\\">\\n  <path class=\\\"jp-icon3\\\" fill=\\\"#616161\\\" d=\\\"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\\\"/>\\n</svg>\";","/******************************************************************************\n *\n * Copyright (c) 2019, the jupyter-fs authors.\n *\n * This file is part of the jupyter-fs library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, ExpansionPanel, ExpansionPanelSummary, Typography, ExpansionPanelDetails, TextField, InputAdornment, IconButton, } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { visibilityIcon, visibilityOffIcon } from \"./icons\";\nclass Template {\n    constructor(template) {\n        this.template = template;\n        this.pattern = /(?:)/;\n    }\n    substitute(dict) {\n        return this.template.replace(this.pattern, (_, p1) => dict[p1]);\n    }\n    tokens() {\n        const toks = [];\n        let match;\n        // eslint-disable-next-line no-cond-assign\n        while ((match = this.pattern.exec(this.template))) {\n            toks.push(match[1]);\n        }\n        return toks;\n    }\n}\nexport class DoubleBraceTemplate extends Template {\n    constructor() {\n        super(...arguments);\n        this.pattern = /{{(\\S+?)}}/g;\n    }\n}\nfunction tokensFromUrl(url) {\n    return new DoubleBraceTemplate(url).tokens();\n}\nfunction _askRequired(spec) {\n    return spec.auth === \"ask\" && !spec.init;\n}\nexport function askRequired(specs) {\n    for (const spec of specs) {\n        if (_askRequired(spec)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport class AskDialog extends React.Component {\n    constructor(props, options) {\n        super(props);\n        this.state = AskDialog.initialState({ open: true, options });\n    }\n    render() {\n        return (React.createElement(\"div\", null,\n            React.createElement(Dialog, { className: \"jfs-ask-dialog\", open: this.state.open, onClose: this._onClose.bind(this) },\n                React.createElement(DialogTitle, { className: \"jfs-ask jfs-ask-dialog-title\" }, \"Please enter token values for filesystem resources\"),\n                React.createElement(DialogContent, { className: \"jfs-ask jfs-ask-dialog-content\" }, this._form()),\n                React.createElement(DialogActions, { className: \"jfs-ask jfs-ask-dialog-actions\" },\n                    React.createElement(Button, { className: \"jfs-ask jfs-ask-dialog-actions-button-cancel\", onClick: this._onClose.bind(this), color: \"primary\" }, \"Cancel\"),\n                    React.createElement(Button, { className: \"jfs-ask jfs-ask-dialog-actions-button-submit\", onClick: this._onSubmit.bind(this), color: \"primary\" }, \"Submit\")))));\n    }\n    _form() {\n        return (React.createElement(\"form\", { className: \"jfs-ask jfs-ask-form\", onSubmit: this._onSubmit.bind(this), noValidate: true, autoComplete: \"off\" }, this._formInner()));\n    }\n    _formInner() {\n        return this.props.resources.map(resource => {\n            // ask for credentials if needed, or state why not\n            const askReq = _askRequired(resource);\n            const inputs = askReq ? this._inputs(resource.url) : [];\n            const tokens = tokensFromUrl(resource.url);\n            let reason = \"\";\n            if (resource.init && this.props.options.cache) {\n                reason = \"already initialized\";\n            }\n            else if (!tokens.length) {\n                reason = \"no template parameters\";\n            }\n            const summary = `${resource.name}:${reason && ` ${reason}`}`;\n            return [\n                React.createElement(ExpansionPanel, { className: \"jfs-ask jfs-ask-panel\", disabled: !!reason, expanded: !reason, key: `${resource.name}_panel` },\n                    React.createElement(ExpansionPanelSummary, { className: \"jfs-ask jfs-ask-panel-summary\" },\n                        React.createElement(Typography, null, summary),\n                        !reason && React.createElement(Typography, null, resource.url)),\n                    React.createElement(ExpansionPanelDetails, { className: \"jfs-ask jfs-ask-panel-details\" }, inputs)),\n            ];\n        });\n    }\n    _inputs(url) {\n        return tokensFromUrl(url).map(token => {\n            var _a, _b, _c;\n            return (React.createElement(TextField, { className: \"jfs-ask jfs-ask-input\", autoFocus: true, fullWidth: true, key: `${url}_${token}`, label: token, margin: \"dense\", name: token, onChange: this._onChange(url).bind(this), type: ((_a = this.state.visibility[url]) === null || _a === void 0 ? void 0 : _a[token]) ? \"text\" : \"password\", value: ((_b = this.state.values[url]) === null || _b === void 0 ? void 0 : _b[token]) || \"\", InputProps: {\n                    endAdornment: (React.createElement(InputAdornment, { position: \"end\" },\n                        React.createElement(IconButton, { onClick: this._onClickVisiblity(url, token).bind(this), onMouseDown: this._onMouseDownVisibility.bind(this), edge: \"end\" }, ((_c = this.state.visibility[url]) === null || _c === void 0 ? void 0 : _c[token]) ? (React.createElement(visibilityIcon.react, null)) : (React.createElement(visibilityOffIcon.react, null))))),\n                } }));\n        });\n    }\n    _onChange(url) {\n        return function (event) {\n            const target = event.target;\n            this._setValue(url, target.name, target.value);\n        };\n    }\n    _onClickVisiblity(url, key) {\n        return function () {\n            this._toggleVisibility(url, key);\n        };\n    }\n    _onMouseDownVisibility(event) {\n        event.preventDefault();\n    }\n    _onOpen() {\n        this.setState({ open: true });\n    }\n    _onClose() {\n        // close the dialog and blank the form\n        this.setState(AskDialog.initialState({ options: this.state.options }));\n        this.props.handleClose();\n    }\n    async _onSubmit(event) {\n        event.preventDefault();\n        this.props.handleSubmit(this.state.values);\n        this._onClose();\n    }\n    _setValue(url, key, value) {\n        const urlValues = { ...this.state.values[url], [key]: value };\n        this.setState({\n            values: { ...this.state.values, [url]: urlValues },\n        });\n    }\n    _toggleVisibility(url, key) {\n        var _a;\n        const urlVis = {\n            ...this.state.visibility[url],\n            [key]: !((_a = this.state.visibility[url]) === null || _a === void 0 ? void 0 : _a[key]),\n        };\n        this.setState({\n            visibility: { ...this.state.visibility, [url]: urlVis },\n        });\n    }\n}\nAskDialog.displayName = \"AskDialog\";\n/**\n * A namespace for AskDialog statics.\n */\n(function (AskDialog) {\n    /**\n     * The initial state for a new AskDialog\n     */\n    AskDialog.initialState = ({ open = false, options, }) => ({\n        open,\n        options: { ...options },\n        values: {},\n        visibility: {},\n    });\n})(AskDialog || (AskDialog = {}));\n//# sourceMappingURL=auth.js.map","/******************************************************************************\n *\n * Copyright (c) 2019, the jupyter-fs authors.\n *\n * This file is part of the jupyter-fs library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport { URLExt } from \"@jupyterlab/coreutils\";\nimport { ServerConnection } from \"@jupyterlab/services\";\nclass FSCommBase {\n    constructor(props = {}) {\n        this._settings = undefined;\n        const { baseUrl } = props;\n        if (baseUrl) {\n            this.baseUrl = baseUrl;\n        }\n    }\n    get baseUrl() {\n        return this.settings.baseUrl;\n    }\n    set baseUrl(baseUrl) {\n        if (baseUrl !== this.baseUrl) {\n            this._settings = ServerConnection.makeSettings({ baseUrl });\n        }\n    }\n    get resourcesUrl() {\n        return URLExt.join(this.baseUrl, \"jupyterfs/resources\");\n    }\n    get settings() {\n        if (!this._settings) {\n            this._settings = ServerConnection.makeSettings();\n        }\n        return this._settings;\n    }\n}\nexport class FSComm extends FSCommBase {\n    async getResourcesRequest() {\n        const settings = this.settings;\n        const fullUrl = this.resourcesUrl;\n        return ServerConnection.makeRequest(fullUrl, { method: \"GET\" }, settings).then(response => {\n            if (response.status !== 200) {\n                return response.text().then(data => {\n                    throw new ServerConnection.ResponseError(response, data);\n                });\n            }\n            return response.json();\n        });\n    }\n    async initResourceRequest(args) {\n        const settings = this.settings;\n        const fullUrl = this.resourcesUrl;\n        return ServerConnection.makeRequest(fullUrl, {\n            body: JSON.stringify(args),\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            method: \"POST\",\n        }, settings).then(response => {\n            if (response.status !== 200) {\n                return response.text().then(data => {\n                    throw new ServerConnection.ResponseError(response, data);\n                });\n            }\n            return response.json();\n        });\n    }\n}\n//# sourceMappingURL=filesystem.js.map","import { Drive } from \"@jupyterlab/services\";\nimport { ClipboardModel, Path } from \"tree-finder\";\nexport class JupyterClipboard {\n    constructor(tracker) {\n        this._model = new ClipboardModel();\n        this._drive = new Drive();\n        this._tracker = tracker;\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        this._model.deleteSub.subscribe(async (memo) => {\n            await Promise.all(memo.map(s => this._onDelete(s)));\n            this.model.refresh(this._tracker.currentWidget.treefinder.model, memo);\n        });\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        this._model.pasteSub.subscribe(async ({ destination, doCut, memo }) => {\n            const destPathstr = Path.fromarray(destination.kind === \"dir\" ? destination.path : destination.path.slice(0, -1));\n            await Promise.all(memo.map(s => this._onPaste(s, destPathstr, doCut)));\n            this.model.refresh(this._tracker.currentWidget.treefinder.model, [destination, ...memo]);\n        });\n    }\n    refresh(tm, memo) {\n        tm !== null && tm !== void 0 ? tm : (tm = this._tracker.currentWidget.treefinder.model);\n        this.model.refresh(tm, memo);\n    }\n    // TODO: remove in favor of this.model.refreshSelection once tree-finder v0.0.14 is out\n    refreshSelection(tm) {\n        this.refresh(tm, tm.selection.map(x => x.row));\n    }\n    get model() {\n        return this._model;\n    }\n    async _onDelete(src) {\n        const srcPathstr = Path.fromarray(src.path);\n        await this._drive.delete(srcPathstr);\n    }\n    async _onPaste(src, destPathstr, doCut) {\n        const srcPathstr = Path.fromarray(src.path);\n        await this._drive.copy(srcPathstr, destPathstr);\n        if (doCut) {\n            await this._drive.delete(srcPathstr);\n        }\n    }\n}\n//# sourceMappingURL=clipboard.js.map","import { Toolbar, ToolbarButton, WidgetTracker, /*Clipboard, Dialog, IWindowResolver, showDialog, showErrorMessage*/ } from \"@jupyterlab/apputils\";\nimport { closeIcon, copyIcon, cutIcon, pasteIcon, refreshIcon, } from \"@jupyterlab/ui-components\";\n// import JSZip from \"jszip\";\nimport { DisposableSet } from \"@lumino/disposable\";\nimport { PanelLayout, Widget } from \"@lumino/widgets\";\nimport { Format, Path } from \"tree-finder\";\nimport { JupyterClipboard } from \"./clipboard\";\nimport { fileTreeIcon } from \"./icons\";\n// import { Uploader } from \"./upload\";\nexport class JupyterContents {\n    constructor(cm, drive) {\n        this.cm = cm;\n        this.drive = drive;\n    }\n    async get(path) {\n        path = JupyterContents.toFullPath(path, this.drive);\n        return JupyterContents.toJupyterContentRow(await this.cm.get(path), this.cm, this.drive);\n    }\n}\n(function (JupyterContents) {\n    function toFullPath(path, drive) {\n        return (!drive || path.startsWith(`${drive}:`)) ? path : [drive, path].join(\":\");\n    }\n    JupyterContents.toFullPath = toFullPath;\n    function toLocalPath(path) {\n        const [first, ...rest] = path.split(\"/\");\n        return [first.split(\":\").pop(), ...rest].join(\"/\");\n    }\n    JupyterContents.toLocalPath = toLocalPath;\n    function toJupyterContentRow(row, cm, drive) {\n        const { path, type, ...rest } = row;\n        const pathWithDrive = toFullPath(path, drive);\n        const kind = type === \"directory\" ? \"dir\" : type;\n        return {\n            path: Path.toarray(pathWithDrive),\n            kind,\n            ...rest,\n            ...(kind === \"dir\" ? {\n                getChildren: async () => (await cm.get(pathWithDrive, { content: true })).content.map((c) => toJupyterContentRow(c, cm, drive)),\n            } : {}),\n        };\n    }\n    JupyterContents.toJupyterContentRow = toJupyterContentRow;\n})(JupyterContents || (JupyterContents = {}));\nexport class TreeFinderTracker extends WidgetTracker {\n    constructor() {\n        super(...arguments);\n        this._finders = new Map();\n    }\n    async add(finder) {\n        this._finders.set(finder.id, finder);\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        finder.disposed.connect(this._onWidgetDisposed, this);\n        return super.add(finder);\n    }\n    remove(finder) {\n        this._finders.delete(finder.id);\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        finder.disposed.disconnect(this._onWidgetDisposed, this);\n    }\n    findByDrive(drive) {\n        return this._finders.get(drive);\n    }\n    hasByDrive(drive) {\n        return this._finders.has(drive);\n    }\n    _onWidgetDisposed(finder) {\n        this.remove(finder);\n    }\n}\nexport class TreeFinderWidget extends Widget {\n    constructor({ app, rootPath = \"\", }) {\n        const { commands, serviceManager: { contents } } = app;\n        const node = document.createElement(\"tree-finder-panel\");\n        super({ node });\n        this.addClass(\"jp-tree-finder\");\n        this.cm = new JupyterContents(contents, rootPath);\n        rootPath = rootPath === \"\" ? rootPath : rootPath + \":\";\n        void this.cm.get(rootPath).then(root => this.node.init({\n            root,\n            gridOptions: {\n                columnFormatters: {\n                    last_modified: (x => Format.timeSince(x)),\n                    size: (x => Format.bytesToHumanReadable(x)),\n                },\n                doWindowResize: true,\n                showFilter: true,\n            },\n            modelOptions: {\n                columnNames: [\"size\", \"mimetype\", \"last_modified\"],\n            },\n        })).then(() => {\n            this.model.openSub.subscribe(rows => rows.forEach(row => {\n                if (!row.getChildren) {\n                    void commands.execute(\"docmanager:open\", { path: Path.fromarray(row.path) });\n                }\n            }));\n        });\n    }\n    draw() {\n        this.model.requestDraw();\n    }\n    refresh() {\n        this.model.refreshSub.next();\n    }\n    get model() {\n        return this.node.model;\n    }\n    get selection() {\n        return this.model.selection;\n    }\n    get selectionPathstrs() {\n        return this.model.selection.map(c => Path.fromarray(c.row.path));\n    }\n}\nexport class TreeFinderSidebar extends Widget {\n    constructor({ app, rootPath = \"\", caption = \"TreeFinder\", id = \"jupyterlab-tree-finder\", }) {\n        super();\n        this.id = id;\n        this.title.icon = fileTreeIcon;\n        this.title.caption = caption;\n        this.title.closable = true;\n        this.addClass(\"jp-tree-finder-sidebar\");\n        // each separate widget gets its own unique commands, with each commandId prefixed with the widget's unique id\n        // TODO: check on edge cases where two widget's share id (ie when two widgets are both views onto the same ContentsManager on the backend)\n        this.commandIDs = Object.fromEntries(TreeFinderSidebar.commandNames.map(name => [name, `${this.id}:treefinder:${name}`]));\n        // this.dr = app.docRegistry;\n        this.toolbar = new Toolbar();\n        this.toolbar.addClass(\"jp-tree-finder-toolbar\");\n        // this.toolbar.addClass(id);\n        this.treefinder = new TreeFinderWidget({ app, rootPath });\n        this.layout = new PanelLayout();\n        this.layout.addWidget(this.toolbar);\n        this.layout.addWidget(this.treefinder);\n    }\n    restore() {\n        this.treefinder.refresh();\n        // const array: Array<Promise<any>> = [];\n        // Object.keys(this.controller).forEach(key => {\n        //   if (this.controller[key].open && (key !== \"\")) {\n        //     const promise = this.cm.get(this.basepath + key);\n        //     promise.catch(res => {\n        //       // eslint-disable-next-line no-console\n        //       console.log(res);\n        //     });\n        //     array.push(promise);\n        //   }\n        // });\n        // Promise.all(array).then(results => {\n        //   for (const r in results) {\n        //     const row_element = this.node.querySelector(\"[id='\" + u_btoa(results[r].path.replace(this.basepath, \"\")) + \"']\");\n        //     this.buildTableContents(results[r].content, 1 + results[r].path.split(\"/\").length, row_element);\n        //   }\n        // }).catch(reasons => {\n        //   // eslint-disable-next-line no-console\n        //   console.log(reasons);\n        // });\n    }\n    // async download(path: string, folder: boolean): Promise<any> {\n    //   if (folder) {\n    //     const zip = new JSZip();\n    //     await this.wrapFolder(zip, path); // folder packing\n    //     // generate and save zip, reset path\n    //     path = PathExt.basename(path);\n    //     writeZipFile(zip, path);\n    //   } else {\n    //     return this.cm.getDownloadUrl(this.basepath + path).then(url => {\n    //       const element = document.createElement(\"a\");\n    //       document.body.appendChild(element);\n    //       element.setAttribute(\"href\", url);\n    //       element.setAttribute(\"download\", \"\");\n    //       element.click();\n    //       document.body.removeChild(element);\n    //       return void 0;\n    //     });\n    //   }\n    // }\n    // async wrapFolder(zip: JSZip, path: string) {\n    //   const base = this.cm.get(this.basepath + path);\n    //   const next = base.then(async res => {\n    //     if (res.type === \"directory\") {\n    //       const new_folder = zip.folder(res.name);\n    //       for (const c in res.content) {\n    //         await this.wrapFolder(new_folder, res.content[c].path);\n    //       }\n    //     } else {\n    //       zip.file(res.name, res.content);\n    //     }\n    //   });\n    //   await next;\n    // }\n    onBeforeShow(msg) {\n        this.treefinder.refresh();\n        this.treefinder.draw();\n    }\n    onResize(msg) {\n        this.treefinder.draw();\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-namespace\n(function (TreeFinderSidebar) {\n    const namespace = \"jupyter-fs:TreeFinder\";\n    // define the command ids as a constant tuple\n    TreeFinderSidebar.commandNames = [\n        \"copy\",\n        \"cut\",\n        \"delete\",\n        \"open\",\n        \"paste\",\n        \"refresh\",\n        \"rename\",\n    ];\n    TreeFinderSidebar.tracker = new TreeFinderTracker({ namespace });\n    TreeFinderSidebar.clipboard = new JupyterClipboard(TreeFinderSidebar.tracker);\n    function sidebarFromResource(resource, props) {\n        return sidebar({\n            ...props,\n            rootPath: resource.drive,\n            caption: `${resource.name}\\nFile Tree`,\n            id: [resource.name.split(\" \").join(\"\"), resource.drive].join(\"_\"),\n        });\n    }\n    TreeFinderSidebar.sidebarFromResource = sidebarFromResource;\n    function sidebar({ app, manager, paths, resolver, restorer, router, rootPath = \"\", caption = \"TreeFinder\", id = \"jupyterlab-tree-finder\", side = \"left\", }) {\n        const selector = `#${id}`;\n        const widget = new TreeFinderSidebar({ app, rootPath, caption, id });\n        void TreeFinderSidebar.tracker.add(widget);\n        restorer.add(widget, widget.id);\n        app.shell.add(widget, side);\n        // const uploader_button = new Uploader({ manager, widget });\n        // const new_file_button = new ToolbarButton({\n        //   icon: newFolderIcon,\n        //   onClick: () => {\n        //     app.commands.execute((CommandIDs.create_folder + \":\" + widget.id), { path: \"\" });\n        //   },\n        //   tooltip: \"New Folder\",\n        // });\n        const refresh_button = new ToolbarButton({\n            icon: refreshIcon,\n            onClick: () => {\n                void app.commands.execute(widget.commandIDs.refresh);\n            },\n            tooltip: \"Refresh\",\n        });\n        // widget.toolbar.addItem(\"upload\", uploader_button);\n        // widget.toolbar.addItem(\"new file\", new_file_button);\n        widget.toolbar.addItem(\"refresh\", refresh_button);\n        // // remove context highlight on context menu exit\n        // document.ondblclick = () => {\n        //   app.commands.execute((CommandIDs.set_context + \":\" + widget.id), { path: \"\" });\n        // };\n        // widget.node.onclick = event => {\n        //   app.commands.execute((CommandIDs.select + \":\" + widget.id), { path: \"\" });\n        // };\n        // setInterval(() => {\n        //   app.commands.execute(CommandIDs.refresh);\n        // }, 10000);\n        // return a disposable containing all disposables associated\n        // with this widget, ending with the widget itself\n        return [\n            // globally accessible jupyter commands\n            app.commands.addCommand(widget.commandIDs.copy, {\n                execute: args => TreeFinderSidebar.clipboard.model.copySelection(widget.treefinder.model),\n                icon: copyIcon,\n                label: \"Copy\",\n            }),\n            app.commands.addCommand(widget.commandIDs.cut, {\n                execute: args => TreeFinderSidebar.clipboard.model.cutSelection(widget.treefinder.model),\n                icon: cutIcon,\n                label: \"Cut\",\n            }),\n            app.commands.addCommand(widget.commandIDs.delete, {\n                execute: args => TreeFinderSidebar.clipboard.model.deleteSelection(widget.treefinder.model),\n                icon: closeIcon.bindprops({ stylesheet: \"menuItem\" }),\n                label: \"Delete\",\n            }),\n            app.commands.addCommand(widget.commandIDs.open, {\n                execute: args => widget.treefinder.model.openSub.next(widget.treefinder.selection.map(c => c.row)),\n                label: \"Open\",\n            }),\n            app.commands.addCommand(widget.commandIDs.paste, {\n                execute: args => TreeFinderSidebar.clipboard.model.pasteSelection(widget.treefinder.model),\n                icon: pasteIcon,\n                label: \"Paste\",\n            }),\n            app.commands.addCommand(widget.commandIDs.refresh, {\n                execute: args => args[\"selection\"] ? TreeFinderSidebar.clipboard.refreshSelection(widget.treefinder.model) : TreeFinderSidebar.clipboard.refresh(widget.treefinder.model),\n                icon: refreshIcon,\n                label: args => args[\"selection\"] ? \"Refresh Selection\" : \"Refresh\",\n            }),\n            // context menu items\n            app.contextMenu.addItem({\n                command: widget.commandIDs.open,\n                selector,\n                rank: 1,\n            }),\n            app.contextMenu.addItem({\n                command: widget.commandIDs.copy,\n                selector,\n                rank: 2,\n            }),\n            app.contextMenu.addItem({\n                command: widget.commandIDs.cut,\n                selector,\n                rank: 3,\n            }),\n            app.contextMenu.addItem({\n                command: widget.commandIDs.paste,\n                selector,\n                rank: 4,\n            }),\n            app.contextMenu.addItem({\n                command: widget.commandIDs.delete,\n                selector,\n                rank: 5,\n            }),\n            app.contextMenu.addItem({\n                args: { selection: true },\n                command: widget.commandIDs.refresh,\n                selector,\n                rank: 10,\n            }),\n            // the widget itself is a disposable\n            widget,\n        ].reduce((set, d) => {\n            set.add(d);\n            return set;\n        }, new DisposableSet());\n    }\n    TreeFinderSidebar.sidebar = sidebar;\n})(TreeFinderSidebar || (TreeFinderSidebar = {}));\n//# sourceMappingURL=treefinder.js.map","/******************************************************************************\n *\n * Copyright (c) 2019, the jupyter-fs authors.\n *\n * This file is part of the jupyter-fs library, distributed under the terms of\n * the Apache License 2.0.  The full license can be found in the LICENSE file.\n *\n */\nimport { ILayoutRestorer, IRouter, JupyterFrontEnd } from \"@jupyterlab/application\";\nimport { IWindowResolver } from \"@jupyterlab/apputils\";\nimport { IDocumentManager } from \"@jupyterlab/docmanager\";\nimport { ISettingRegistry } from \"@jupyterlab/settingregistry\";\nimport { DisposableSet } from \"@lumino/disposable\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { AskDialog, askRequired } from \"./auth\";\nimport { FSComm } from \"./filesystem\";\nimport { TreeFinderSidebar } from \"./treefinder\";\n// tslint:disable: variable-name\nconst plugin = {\n    activate,\n    autoStart: true,\n    id: \"jupyter-fs:plugin\",\n    requires: [\n        IDocumentManager,\n        JupyterFrontEnd.IPaths,\n        IWindowResolver,\n        ILayoutRestorer,\n        IRouter,\n        ISettingRegistry,\n    ],\n};\nasync function activate(app, manager, paths, resolver, restorer, router, settingRegistry) {\n    const comm = new FSComm();\n    let disposable = new DisposableSet();\n    const sidebarProps = {\n        app,\n        manager,\n        paths,\n        resolver,\n        restorer,\n        router,\n    };\n    // Attempt to load application settings\n    let settings;\n    try {\n        settings = await settingRegistry.load(plugin.id);\n    }\n    catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(`Failed to load settings for the jupyter-fs extension.\\n${error}`);\n    }\n    async function refreshWidgets({ resources, options }) {\n        if (options.verbose) {\n            // eslint-disable-next-line no-console\n            console.info(`jupyter-fs frontend received resources:\\n${resources}`);\n        }\n        // create the fs resource frontends (ie FileTree instances)\n        for (const r of resources) {\n            // make one composite disposable for all fs resource frontends\n            disposable.add(TreeFinderSidebar.sidebarFromResource(r, sidebarProps));\n        }\n    }\n    async function refresh() {\n        // each disposable can only be disposed once\n        disposable.dispose();\n        disposable = new DisposableSet();\n        // get user settings from json file\n        let resources = settings.composite.resources;\n        const options = settings.composite.options;\n        // send user specs to backend; await return containing resources\n        // defined by user settings + resources defined by server config\n        resources = await comm.initResourceRequest({\n            resources,\n            options: {\n                ...options,\n                _addServerside: true,\n            },\n        });\n        if (askRequired(resources)) {\n            // ask for url template values, if required\n            const dialogElem = document.createElement(\"div\");\n            document.body.appendChild(dialogElem);\n            const handleClose = () => {\n                ReactDOM.unmountComponentAtNode(dialogElem);\n                dialogElem.remove();\n            };\n            const handleSubmit = async (values) => {\n                await refreshWidgets({\n                    resources: await comm.initResourceRequest({\n                        resources: resources.map(r => ({ ...r, tokenDict: values[r.url] })),\n                        options,\n                    }),\n                    options,\n                });\n            };\n            ReactDOM.render(React.createElement(AskDialog, { handleClose: handleClose, handleSubmit: handleSubmit, options: options, resources: resources }), dialogElem);\n        }\n        else {\n            // otherwise, just go ahead and refresh the widgets\n            await refreshWidgets({ options, resources });\n        }\n    }\n    if (settings) {\n        // initial setup\n        void refresh();\n        // rerun setup whenever relevant settings change\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises\n        settings.changed.connect(refresh);\n    }\n}\nexport default plugin;\nexport { activate as _activate };\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}