test_normalize_seq:
  -
    raw_seq: GATTACA
    expected: GATTACA
  -
    raw_seq: gattaca
    expected: GATTACA
  -
    raw_seq: /5Cy5/GATTACA
    expected: XGATTACA
  -
    raw_seq: /5Cy5/GATTACA/3Puro/
    expected: XGATTACAX

test_parse_tag:
  -
    tag_str: p1
    expected:
      type: p
      id: 1
  -
    tag_str:
      >  p1
    expected:
      type: p
      id: 1
  -
    tag_str:
      > p1 
    expected:
      type: p
      id: 1
  -
    tag_str: f1
    expected:
      type: f
      id: 1
  -
    tag_str: o1
    expected:
      type: o
      id: 1
  -
    tag_str: p01
    expected:
      type: p
      id: 1
  -
    tag_str: p10
    expected:
      type: p
      id: 10
  -
    tag_str: p
    error:
      type: ParseError
      message: not 'p'
  -
    tag_str: 1
    error:
      type: ParseError
      message: not '1'
  -
    tag_str: p-1
    error:
      type: ParseError
      message: not 'p-1'
  -
    tag_str: p1.0
    error:
      type: ParseError
      message: not 'p1.0'
  -
    tag_str: p 1
    error:
      type: ParseError
      message: not 'p 1'
  -
    tag_str: a1
    error:
      type: ParseError
      message: not 'a1'

test_parse_bool:
  -
    bool_str: 1
    expected: True
  -
    bool_str: y
    expected: True
  -
    bool_str: Y
    expected: True
  -
    bool_str: yes
    expected: True
  -
    bool_str: YES
    expected: True
  -
    bool_str: true
    expected: True
  -
    bool_str: True
    expected: True
  -
    bool_str: 0
    expected: False
  -
    bool_str: n
    expected: False
  -
    bool_str: N
    expected: False
  -
    bool_str: no
    expected: False
  -
    bool_str: NO
    expected: False
  -
    bool_str: false
    expected: False
  -
    bool_str: False
    expected: False
  -
    bool_str:
    error:
      type: ParseError
      message: can't interpret '' as a bool
  -
    bool_str: x
    error:
      type: ParseError
      message: can't interpret 'x' as a bool

test_parse_time_s:
  -
    time_str: 1s
    expected: 1
  -
    time_str: 1 sec
    expected: 1
  -
    time_str: 1 second
    expected: 1
  -
    time_str: 2 seconds
    expected: 2
  -
    time_str: 1m
    expected: 60
  -
    time_str: 1 min
    expected: 60
  -
    time_str: 1 minute
    expected: 60
  -
    time_str: 2 minutes
    expected: 120
  -
    time_str: 1h
    expected: 3600
  -
    time_str: 1 hr
    expected: 3600
  -
    time_str: 1 hour
    expected: 3600
  -
    time_str: 2 hours
    expected: 7200
  -
    time_str: 1m30
    expected: 90
  -
    time_str:
    error:
      type: ParseError
      message: can't interpret '' as a time
  -
    time_str: 30
    error:
      type: ParseError
      message: can't interpret '30' as a time
  -
    time_str: 1:30
    error:
      type: ParseError
      message: can't interpret '1:30' as a time

test_parse_temp_C:
  -
    temp_str: 60C
    expected: 60
  -
    temp_str: 60 C
    expected: 60
  -
    temp_str: 60°C
    expected: 60
  -
    temp_str: 60 °C
    expected: 60
  -
    temp_str:
    error:
      type: ParseError
      message: can't interpret '' as a temperature
  -
    temp_str: 60
    error:
      type: ParseError
      message: can't interpret '60' as a temperature

test_parse_volume_uL:
  -
    vol_str: 1uL
    expected: 1
  -
    vol_str: 1 uL
    expected: 1
  -
    vol_str: 1µL
    expected: 1
  -
    vol_str: 1 µL
    expected: 1
  -
    vol_str: 1 mL
    expected: 1000
  -
    vol_str: 100 nL
    expected: 0.1
  -
    vol_str:
    error:
      type: ParseError
      message: can't interpret '' as a volume
  -
    vol_str: 1
    error:
      type: ParseError
      message: can't interpret '1' as a volume
  -
    vol_str: 1 xL
    error:
      type: ParseError
      message: can't interpret '1 xL' as a volume

test_parse_mass_ug:
  -
    mass_str: 1ug
    expected: 1
  -
    mass_str: 1 ug
    expected: 1
  -
    mass_str: 1µg
    expected: 1
  -
    mass_str: 1 µg
    expected: 1
  -
    mass_str: 1 mg
    expected: 1000
  -
    mass_str: 100 ng
    expected: 0.1
  -
    mass_str:
    error:
      type: ParseError
      message: can't interpret '' as a mass
  -
    mass_str: 1
    error:
      type: ParseError
      message: can't interpret '1' as a mass
  -
    mass_str: 1 xg
    error:
      type: ParseError
      message: can't interpret '1 xg' as a mass

test_parse_conc:
  -
    conc_str: 4 nM
    mw: 1e6
    expected_nM: 4
    expected_ng_uL: 4
  -
    conc_str: 4nM
    mw: 2e6
    expected_nM: 4
    expected_ng_uL: 8
  -
    conc_str: 4 nM
    mw: 2e6
    expected_nM: 4
    expected_ng_uL: 8
  -
    conc_str: 4uM
    mw: 1e6
    expected_nM: 4000
    expected_ng_uL: 4000
  -
    conc_str: 4 uM
    mw: 1e6
    expected_nM: 4000
    expected_ng_uL: 4000
  -
    conc_str: 4µM
    mw: 1e6
    expected_nM: 4000
    expected_ng_uL: 4000
  -
    conc_str: 4 µM
    mw: 1e6
    expected_nM: 4000
    expected_ng_uL: 4000
  -
    conc_str: 4uM
    mw: 2e6
    expected_nM: 4000
    expected_ng_uL: 8000
  -
    conc_str: 4 uM
    mw: 2e6
    expected_nM: 4000
    expected_ng_uL: 8000
  -
    conc_str: 4µM
    mw: 2e6
    expected_nM: 4000
    expected_ng_uL: 8000
  -
    conc_str: 4 µM
    mw: 2e6
    expected_nM: 4000
    expected_ng_uL: 8000
  -
    conc_str: 4ng/uL
    mw: 1e6
    expected_nM: 4
    expected_ng_uL: 4
  -
    conc_str: 4 ng/uL
    mw: 1e6
    expected_nM: 4
    expected_ng_uL: 4
  -
    conc_str: 4ng/µL
    mw: 1e6
    expected_nM: 4
    expected_ng_uL: 4
  -
    conc_str: 4 ng/µL
    mw: 1e6
    expected_nM: 4
    expected_ng_uL: 4
  -
    conc_str: 4ng/uL
    mw: 2e6
    expected_nM: 2
    expected_ng_uL: 4
  -
    conc_str: 4 ng/uL
    mw: 2e6
    expected_nM: 2
    expected_ng_uL: 4
  -
    conc_str: 4ng/µL
    mw: 2e6
    expected_nM: 2
    expected_ng_uL: 4
  -
    conc_str: 4 ng/µL
    mw: 2e6
    expected_nM: 2
    expected_ng_uL: 4

test_parse_conc_err:
  -
    conc_str:
    mw: 1e6
    error:
      type: ParseError
      message: can't interpret '' as a concentration
  -
    conc_str: 4
    mw: 1e6
    error:
      type: ParseError
      message: can't interpret '4' as a concentration

test_parse_size_bp:
  -
    size_str: 100bp
    expected: 100
  -
    size_str: 100 bp
    expected: 100
  -
    size_str: 1kb
    expected: 1000
  -
    size_str: 1 kb
    expected: 1000
  -
    size_str: 1.5kb
    expected: 1500
  -
    size_str: 1.5 kb
    expected: 1500
  -
    size_str:
    error:
      type: ParseError
      message: can't interpret '' as a size
  -
    size_str: 100
    error:
      type: ParseError
      message: can't interpret '100' as a size
  -
    size_str: 1.5 bp
    error:
      type: ParseError
      message: can't interpret '1.5 bp' as a size

test_parse_stranded_molecule:
  -
    id: dsdna
    molecule: 'dna'
    expected: ('DNA', 2)
  -
    id: dsdna
    molecule: 'DNA'
    expected: ('DNA', 2)
  -
    id: dsdna
    molecule: 'dsdna'
    expected: ('DNA', 2)
  -
    id: dsdna
    molecule: 'dsDNA'
    expected: ('DNA', 2)
  -
    id: dsdna
    molecule: ('DNA', 2)
    expected: ('DNA', 2)

  -
    id: ssdna
    molecule: 'ssdna'
    expected: ('DNA', 1)
  -
    id: ssdna
    molecule: 'ssDNA'
    expected: ('DNA', 1)
  -
    id: ssdna
    molecule: 'dna'
    default_strandedness: 1
    expected: ('DNA', 1)
  -
    id: ssdna
    molecule: 'DNA'
    default_strandedness: 1
    expected: ('DNA', 1)
  -
    id: ssdna
    molecule: ('DNA', 1)
    expected: ('DNA', 1)

  -
    id: ssrna
    molecule: 'rna'
    expected: ('RNA', 1)
  -
    id: ssrna
    molecule: 'RNA'
    expected: ('RNA', 1)
  -
    id: ssrna
    molecule: 'ssrna'
    expected: ('RNA', 1)
  -
    id: ssrna
    molecule: 'ssRNA'
    expected: ('RNA', 1)
  -
    id: ssrna
    molecule: ('RNA', 1)
    expected: ('RNA', 1)

  -
    id: dsrna
    molecule: 'dsrna'
    expected: ('RNA', 2)
  -
    id: dsrna
    molecule: 'dsRNA'
    expected: ('RNA', 2)
  -
    id: dsrna
    molecule: 'rna'
    default_strandedness: 2
    expected: ('RNA', 2)
  -
    id: dsrna
    molecule: 'RNA'
    default_strandedness: 2
    expected: ('RNA', 2)

  -
    id: err
    molecule: 'xyz'
    error:
      type: ParseError
      message:
        - unknown molecule type: 'xyz'
        - expected: 'dna', 'ssdna', 'dsdna', 'rna', 'ssrna', 'dsrna'

test_mw_from_length:
  # https://www.thermofisher.com/us/en/home/references/ambion-tech-support/rna-tools-and-calculators/dna-and-rna-molecular-weights-and-conversions.html
  -
    len: 20
    molecule: 'ssRNA'
    expected: 6569
  -
    len: 20
    molecule: ('RNA', 1)
    expected: 6569
  -
    len: 100
    molecule: 'ssRNA'
    expected: 32209

  -
    len: 20
    molecule: 'ssDNA'
    expected: 6153
  -
    len: 20
    molecule: ('DNA', 1)
    expected: 6153
  -
    len: 100
    molecule: 'ssDNA'
    expected: 30449

  -
    len: 20
    molecule: 'dsDNA'
    expected: 12306
  -
    len: 20
    molecule: ('DNA', 2)
    expected: 12306
  -
    len: 100
    molecule: 'dsDNA'
    expected: 60898

test_unanimous:
  -
    items: []
    error:
      type: ValueError
      message: empty iterable
  -
    items: [1]
    expected: 1
  -
    items: [1, 1]
    expected: 1
  -
    items: [1, 2]
    error:
      type: ValueError
      message: found multiple values: 1, 2
  -
    items: [2, 1]
    error:
      type: ValueError
      message: found multiple values: 2, 1
  -
    items: [2, 2]
    expected: 2

test_join_lists:
  -
    given: []
    expected: []
  -
    given: [[]]
    expected: []
  -
    given: [[1]]
    expected: [1]
  -
    given: [[1, 2]]
    expected: [1, 2]
  -
    given: [[1], [2]]
    expected: [1, 2]
  -
    given: [[1, 2], [3, 4]]
    expected: [1, 2, 3, 4]

test_join_dicts:
  -
    given: []
    expected: {}
  -
    given: [{}]
    expected: {}
  -
    given: [{'a': 2}]
    expected: {'a': 2}
  -
    given: [{'a': 1, 'b': 2}]
    expected: {'a': 1, 'b': 2}
  -
    given: [{'a': 1}, {'b': 2}]
    expected: {'a': 1, 'b': 2}
  -
    given: [{'a': 1, 'b': 2}, {'c': 3, 'd': 4}]
    expected: {'a': 1, 'b': 2, 'c': 3, 'd': 4}

test_join_sets:
  -
    given: []
    expected: set()
  -
    given: [set()]
    expected: set()
  -
    given: [{1}]
    expected: {1}
  -
    given: [{1, 2}]
    expected: {1, 2}
  -
    given: [{1}, {2}]
    expected: {1, 2}
  -
    given: [{1, 2}, {2, 3}]
    expected: {1, 2, 3}

