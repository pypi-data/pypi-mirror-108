{"version":3,"sources":["webpack://jupyterlab-fileopen/./lib/handler.js","webpack://jupyterlab-fileopen/./lib/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA+C;AACS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kDAAkD;AACzD;AACA,qBAAqB,+EAA6B;AAClD,uBAAuB,8DAAW;AAClC;AACA;AACA;AACA,yBAAyB,8EAA4B;AACrD;AACA;AACA,kBAAkB,+EAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gFAA8B;AAChD;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AClC4C;AACI;AACc;AACP;AAChB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wEAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAO;AAC7C;AACA;AACA;AACA;AACA,iCAAiC,kEAAe;AAChD,oBAAoB,oDAAU,wBAAwB,uCAAuC,aAAa,GAAG;AAC7G;AACA;AACA,qBAAqB;AACrB;AACA,0GAA0G,OAAO;AACjH,qBAAqB;AACrB;AACA,aAAa;AACb,kBAAkB,iEAAU;AAC5B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iEAAe,SAAS,EAAC","file":"lib_index_js.9db32032f2407b67f544.js","sourcesContent":["import { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI(endPoint = '', init = {}) {\n    // Make request to Jupyter API\n    const settings = ServerConnection.makeSettings();\n    const requestUrl = URLExt.join(settings.baseUrl, 'jupyterlab-fileopen', // API Namespace\n    endPoint);\n    let response;\n    try {\n        response = await ServerConnection.makeRequest(requestUrl, init, settings);\n    }\n    catch (error) {\n        throw new ServerConnection.NetworkError(error);\n    }\n    let data = await response.text();\n    if (data.length > 0) {\n        try {\n            data = JSON.parse(data);\n        }\n        catch (error) {\n            console.log('Not a JSON response body.', response);\n        }\n    }\n    if (!response.ok) {\n        throw new ServerConnection.ResponseError(response, data.message || data);\n    }\n    return data;\n}\n","import { toArray } from '@lumino/algorithm';\nimport { PathExt } from '@jupyterlab/coreutils';\nimport { IFileBrowserFactory } from '@jupyterlab/filebrowser';\nimport { folderIcon } from '@jupyterlab/ui-components';\nimport { requestAPI } from './handler';\nconst selectorItem = '.jp-DirListing-item[data-isdir]';\n/**\n * The command IDs.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.openFileExplorer = 'jupyterlab-fileopen:open-file-explorer';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * Initialization data for the jupyterlab-fileopen extension.\n */\nconst extension = {\n    id: 'jupyterlab-fileopen:plugin',\n    requires: [\n        IFileBrowserFactory\n    ],\n    autoStart: true,\n    activate: (app, factory) => {\n        app.commands.addCommand(CommandIDs.openFileExplorer, {\n            execute: () => {\n                const widget = factory.tracker.currentWidget;\n                if (widget) {\n                    const selection = toArray(widget.selectedItems());\n                    if (selection.length != 1) {\n                        return;\n                    }\n                    const selected = selection[0];\n                    const path = PathExt.dirname(selected.path);\n                    requestAPI('open-file-explorer', { method: 'POST', body: JSON.stringify({ path: path }) })\n                        .then(data => {\n                        console.log(data);\n                    })\n                        .catch(reason => {\n                        console.error(`The jupyterlab-fileopen server extension appears to be missing.\\n${reason}`);\n                    });\n                }\n            },\n            icon: folderIcon,\n            // TODO Translation\n            // label: trans.__('Open Containing Folder')\n            label: 'Open Containing Folder'\n        });\n        app.contextMenu.addItem({\n            command: CommandIDs.openFileExplorer,\n            selector: selectorItem,\n            rank: 2\n        });\n    }\n};\nexport default extension;\n"],"sourceRoot":""}